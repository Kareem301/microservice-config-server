eureka:
    client:
        fetchRegistry: true
        registerWithEureka: true
        serviceUrl:
            defaultZone: http://localhost:9000/eureka
    instance:
        instance-id: ${spring.application.name}:${instanceId:${random.value}}
        preferIpAddress: true
server:
    port: 8085
spring:
    application:
        name: filter-service
  datasource:
    url: jdbc:mysql://localhost:3306/inventory
    username: myuser
    password: mypassword
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    kafka:
        consumer:
            auto-offset-reset: earliest
            bootstrap-servers: localhost:9092
            group-id: filter
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: '*'
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        topic:
            name: topic-filter
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
